{"ast":null,"code":"var _jsxFileName = \"/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/ComponentsDashboard/Messagerie.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport AuthContext from \"./../auth/AuthContext\";\nimport DisplayMessage from \"./DisplayMessage\";\nexport default class Messagerie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: []\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleSubmit = async evt => {\n      evt.preventDefault();\n      const {\n        message_content\n      } = this.state;\n      await axios.post(process.env.REACT_APP_BACKEND_URL + '/messagerie', {\n        writer: this.context.currentUser._id,\n        reader: this.props.match.params.iduser,\n        id_annonce: this.props.match.params.idannonce,\n        message_content,\n        date: Date.now()\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const messages = await axios.get(process.env.REACT_APP_BACKEND_URL + '/messagerie'); // const filteredMessage = messages.data.filter(message => {\n    //     if (message.writer._id === this.context.currentUser._id && message.reader._id === this.props.match.params.iduser)\n    //         return message;\n    // });\n    // console.log(filteredMessage);\n\n    this.setState({\n      messages: messages.data\n    });\n  }\n\n  render() {\n    const messages = this.state.messages;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagerie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Messagerie\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    }, messages.map((message, i) => {\n      return /*#__PURE__*/React.createElement(DisplayMessage, {\n        message: message,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onChange: this.handleChange,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message_content\",\n      className: \"label-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \" Votre message : \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"message_content\",\n      className: \"input-message\",\n      placeholder: \"Saisir votre message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"create-annonce-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Envoyer le message\"))));\n  }\n\n}\nMessagerie.contextType = AuthContext;","map":{"version":3,"sources":["/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/ComponentsDashboard/Messagerie.jsx"],"names":["React","Component","axios","AuthContext","DisplayMessage","Messagerie","state","messages","handleChange","evt","setState","target","name","value","handleSubmit","preventDefault","message_content","post","process","env","REACT_APP_BACKEND_URL","writer","context","currentUser","_id","reader","props","match","params","iduser","id_annonce","idannonce","date","Date","now","componentDidMount","get","data","render","map","message","i","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport AuthContext from \"./../auth/AuthContext\";\nimport DisplayMessage from \"./DisplayMessage\"\n\n\n\nexport default class Messagerie extends Component {\n    state = { messages: [] };\n    static contextType = AuthContext;\n\n    handleChange = (evt) => {\n        this.setState({ [evt.target.name]: evt.target.value });\n    };\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault();\n\n        const {\n            message_content,\n        } = this.state;\n\n        await axios.post(process.env.REACT_APP_BACKEND_URL + '/messagerie', {\n            writer: this.context.currentUser._id,\n            reader: this.props.match.params.iduser,\n            id_annonce: this.props.match.params.idannonce,\n            message_content,\n            date: Date.now(),\n        });\n\n    };\n\n\n    async componentDidMount() {\n        const messages = await axios.get(process.env.REACT_APP_BACKEND_URL + '/messagerie');\n        // const filteredMessage = messages.data.filter(message => {\n        //     if (message.writer._id === this.context.currentUser._id && message.reader._id === this.props.match.params.iduser)\n        //         return message;\n        // });\n        // console.log(filteredMessage);\n\n        this.setState({ messages: messages.data });\n\n    }\n\n    render() {\n        const messages = this.state.messages\n        return (\n            <div className=\"messagerie\">\n                <h1>Messagerie</h1>\n               \n               <div className=\"show-message\">\n               {messages.map((message, i) => {\n                    return <DisplayMessage message={message} key={i} />\n                })}\n               </div>\n               \n                <div className=\"message-container\">\n                    <form className=\"form\"\n                        onChange={this.handleChange}\n                        onSubmit={this.handleSubmit}>\n                        <label htmlFor=\"message_content\" className=\"label-message\"> Votre message : </label>\n                        <input type=\"text\" name=\"message_content\" className=\"input-message\" placeholder=\"Saisir votre message\" />\n                        <button className=\"create-annonce-btn\">Envoyer le message</button>\n                    </form>\n                </div>\n               \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}