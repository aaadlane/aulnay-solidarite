{"ast":null,"code":"var _jsxFileName = \"/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/ComponentsDashboard/ManageAnnounce.jsx\";\nimport React, { Component } from 'react';\nimport AuthContext from \"./../auth/AuthContext\";\nimport axios from \"axios\";\nexport default class ManageAnnounce extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categorie: [],\n      annonces: []\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const categories = await axios.get(\"http://localhost:5555/categories\");\n    this.setState({\n      categorie: categories.data\n    });\n    const allAnnonces = await axios.get(\"http://localhost:5555/annonce/\");\n    this.setState({\n      annonces: allAnnonces.data\n    });\n    console.log(\"get annonce\", allAnnonces);\n    console.log(\"get annonce data \", allAnnonces.data);\n    console.log(\"this context\", this.context);\n    const idUserConnected = this.context.currentUser._id;\n    console.log(\"ID de l'user connecté dans le contexte\", idUserConnected); // test avec map \n\n    const annoncemap = allAnnonces.data.map((annoncemap, i) => {\n      return annoncemap;\n    });\n    console.log(\"Map sur annonce\", annoncemap);\n    let annonceArray = [];\n\n    for (let i = 0; i < annoncemap.length; i++) {\n      console.log(\"annonce map user id\", annoncemap[i].id_user._id);\n\n      if (annoncemap[i].id_user._id === idUserConnected) {\n        console.log(annoncemap[i]);\n        annonceArray.push(annoncemap[i]);\n      }\n    }\n\n    console.log('annonceArray------', annonceArray);\n    const annoncemapdata = annoncemap[0]._id;\n    console.log(\"ya quoi dans la data\", annoncemapdata); // test avec filter\n    // function annonces(obj) {\n    //     if (obj._id !== undefined) { return obj._id }\n    //     else { return \"message erreur\"; }\n    // };\n    // var annonceID = allAnnonces.data.filter(annonces);\n    // console.log(\"annonceid\", annonceID);\n  }\n\n  render() {\n    const annonces = this.state.annonces;\n    console.log(\"annonces\", annonces);\n    const array = this.state.annonceArray;\n    console.log(\"array dans le render\", array);\n    const categorie = this.state.categorie; // console.log(\"@@@@@@@\", categorie)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"manage-announce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \" Manage annonce \"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onChange: this.handleChange,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      className: \"input\",\n      placeholder: \"titre de l'annonce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      className: \"input\",\n      placeholder: \"description de l'annonce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, array), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"category_name\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \" Cat\\xE9gorie : \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"category_name\",\n      id: \"category_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"choisir\"), categorie.map((categ, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: categ.category_name,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }\n      }, \" \", categ.category_name, \" \");\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"active\",\n      className: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \" Annonce active \"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"active\",\n      id: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Choisir\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"active\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"inactive\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"create !!!\")));\n  }\n\n} // dans l'ordre je dois :\n// 1 get toutes les annonces\n// boucler dans les annonces \n// 2 get l'id de l'user connecté\n// 3 verifier dans les annonces que l'id user de l'annonce correspond a l'id de l'user connecte\n\nManageAnnounce.contextType = AuthContext;","map":{"version":3,"sources":["/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/ComponentsDashboard/ManageAnnounce.jsx"],"names":["React","Component","AuthContext","axios","ManageAnnounce","state","categorie","annonces","handleChange","evt","setState","target","name","value","componentDidMount","categories","get","data","allAnnonces","console","log","context","idUserConnected","currentUser","_id","annoncemap","map","i","annonceArray","length","id_user","push","annoncemapdata","render","array","handleSubmit","categ","category_name","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AuthContext from \"./../auth/AuthContext\";\nimport axios from \"axios\";\n\n\nexport default class ManageAnnounce extends Component {\n\n    state = {\n        categorie: [],\n        annonces: []\n    }\n    handleChange = (evt) => {\n        this.setState({ [evt.target.name]: evt.target.value });\n    };\n    static contextType = AuthContext;\n\n    async componentDidMount() {\n        const categories = await axios.get(\"http://localhost:5555/categories\")\n        this.setState({ categorie: categories.data })\n        const allAnnonces = await axios.get(\"http://localhost:5555/annonce/\")\n        this.setState({ annonces: allAnnonces.data })\n        console.log(\"get annonce\", allAnnonces);\n        console.log(\"get annonce data \", allAnnonces.data);\n\n        console.log(\"this context\", this.context);\n        const idUserConnected = this.context.currentUser._id;\n        console.log(\"ID de l'user connecté dans le contexte\", idUserConnected);\n\n        // test avec map \n        const annoncemap = allAnnonces.data.map((annoncemap, i) => {\n            return annoncemap\n        });\n        console.log(\"Map sur annonce\", annoncemap);\n\n        let annonceArray = []\n        for (let i = 0; i < annoncemap.length; i++) {\n            console.log(\"annonce map user id\", annoncemap[i].id_user._id)\n\n            if (annoncemap[i].id_user._id === idUserConnected) {\n                console.log(annoncemap[i])\n                annonceArray.push(annoncemap[i])\n            }\n        }\n\n        console.log('annonceArray------', annonceArray)\n        \n        const annoncemapdata = annoncemap[0]._id;\n        console.log(\"ya quoi dans la data\", annoncemapdata);\n\n        // test avec filter\n        // function annonces(obj) {\n        //     if (obj._id !== undefined) { return obj._id }\n        //     else { return \"message erreur\"; }\n        // };\n        // var annonceID = allAnnonces.data.filter(annonces);\n        // console.log(\"annonceid\", annonceID);\n\n        \n    }\n\n\n    render() {\n        const annonces = this.state.annonces;\n        console.log(\"annonces\", annonces);\n\n        const array = this.state.annonceArray;\n        console.log(\"array dans le render\",array);\n\n        const categorie = this.state.categorie\n        // console.log(\"@@@@@@@\", categorie)\n\n        return (\n            <div className=\"manage-announce\">\n                <h1> Manage annonce </h1>\n\n\n                <form className=\"form\"\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSubmit}>\n                    <br />\n                    <label htmlFor=\"title\" className=\"label\"></label>\n                    <input type=\"text\" name=\"title\" className=\"input\" placeholder=\"titre de l'annonce\" />\n                    <br />\n                    <label htmlFor=\"description\" className=\"label\"></label>\n                    <input type=\"text\" name=\"description\" className=\"input\" placeholder=\"description de l'annonce\" />\n                    <br />\n\n        <p>{array}</p>\n                    <label htmlFor=\"category_name\" className=\"label\"> Catégorie : </label>\n                    <select name=\"category_name\" id=\"category_name\">\n                        <option>choisir</option>\n                        {categorie.map((categ, i) => {\n                            return <option value={categ.category_name} key={i}> {categ.category_name} </option>\n                        })}\n                    </select>\n                    <br />\n                    <label htmlFor=\"active\" className=\"active\"> Annonce active </label>\n                    <select name=\"active\" id=\"active\">\n                        <option>Choisir</option>\n                        <option value=\"true\">active</option>\n                        <option value=\"false\">inactive</option>\n                    </select>\n                    <br />\n                    <button className=\"btn\">create !!!</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n// dans l'ordre je dois :\n// 1 get toutes les annonces\n// boucler dans les annonces \n// 2 get l'id de l'user connecté\n// 3 verifier dans les annonces que l'id user de l'annonce correspond a l'id de l'user connecte"]},"metadata":{},"sourceType":"module"}