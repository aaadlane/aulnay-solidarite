{"ast":null,"code":"var _jsxFileName = \"/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/page/UserInfos.jsx\";\nimport React, { Component } from 'react';\nimport { apiHandler } from './../../api/handler';\nimport { APIHandler } from './../../api/handler';\nconst handler = apiHandler();\nconst classHandler = new APIHandler(\"/annonce\");\nexport default class UserInfos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isEditMode: false,\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\"\n    };\n\n    this.handleChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.updateUser = async e => {\n      e.preventDefault(); // classique : empêche l'event submit du formulaire de rafraîchir la page\n\n      try {\n        const apiRes = await handler.patch(\"/api/user/\" + this.props.context.currentUser._id, {\n          // ci-dessous : prend la valeur du state (si modifié) OU la valeur originale provenant de AuthContext\n          first_name: this.state.first_name || this.props.context.currentUser.first_name,\n          last_name: this.state.last_name || this.props.context.currentUser.last_name,\n          email: this.state.email || this.props.context.currentUser.email\n        });\n        console.log(apiRes);\n        this.props.context.setCurrentUser(apiRes.data); // mise à jour AuthContext avec les nouvelles infos user\n\n        console.log(\"dsdsdsd\", apiRes.data);\n      } catch (apiErr) {\n        console.error(apiErr);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.match.params.id);\n    const apiRes = await classHandler.getById(this.props.match.params.id);\n    console.log(apiRes);\n    this.setState(apiRes.data);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onChange: this.handleChange,\n      onSubmit: this.updateUser,\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"My infos\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"first_name\",\n      defaultValue: this.props.context.currentUser.first_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"last_name\",\n      defaultValue: this.props.context.currentUser.last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"email\",\n      defaultValue: this.props.context.currentUser.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"update infos\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/page/UserInfos.jsx"],"names":["React","Component","apiHandler","APIHandler","handler","classHandler","UserInfos","state","isEditMode","first_name","last_name","email","handleChange","e","setState","target","name","value","updateUser","preventDefault","apiRes","patch","props","context","currentUser","_id","console","log","setCurrentUser","data","apiErr","error","componentDidMount","match","params","id","getById","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,MAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,MAAMG,YAAY,GAAG,IAAIF,UAAJ,CAAe,UAAf,CAArB;AAGA,eAAe,MAAMG,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CM,KAD6C,GACrC;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,KAAK,EAAE;AAJH,KADqC;;AAAA,SAa3CC,YAb2C,GAa3BC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,KAAd,CAbqB;;AAAA,SAe3CC,UAf2C,GAe9B,MAAOL,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACM,cAAF,GADwB,CACJ;;AAEpB,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMhB,OAAO,CAACiB,KAAR,CACnB,eAAe,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+BC,GAD3B,EAEnB;AAAE;AACAhB,UAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAAX,IAAyB,KAAKa,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+Bf,UADtE;AAEEC,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,IAAwB,KAAKY,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+Bd,SAFpE;AAGEC,UAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAAX,IAAoB,KAAKW,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+Bb;AAH5D,SAFmB,CAArB;AAQAe,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAKE,KAAL,CAAWC,OAAX,CAAmBK,cAAnB,CAAkCR,MAAM,CAACS,IAAzC,EAVE,CAU8C;;AAChDH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBP,MAAM,CAACS,IAA7B;AACD,OAZD,CAYE,OAAOC,MAAP,EAAe;AACfJ,QAAAA,OAAO,CAACK,KAAR,CAAcD,MAAd;AACD;AACF,KAjC0C;AAAA;;AAO3C,QAAME,iBAAN,GAA0B;AACxBN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,UAAMf,MAAM,GAAG,MAAMf,YAAY,CAAC+B,OAAb,CAAqB,KAAKd,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C,CAArB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,SAAKN,QAAL,CAAcM,MAAM,CAACS,IAArB;AACH;;AAuBDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ;AACQ,MAAA,QAAQ,EAAE,KAAKzB,YADvB;AAEQ,MAAA,QAAQ,EAAE,KAAKM,UAFvB;AAGQ,MAAA,SAAS,EAAC,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKQ;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,eAMQ;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,YAAY,EAAE,KAAKI,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+Bf,UAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,eAYQ;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,YAAY,EAAE,KAAKa,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+Bd,SAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,eAkBQ;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,YAAY,EAAE,KAAKY,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+Bb,KAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBR,eAwBQ;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxBR,CADY,CADJ;AA8BH;;AAlE4C","sourcesContent":["import React, { Component } from 'react';\nimport { apiHandler } from './../../api/handler';\nimport { APIHandler } from './../../api/handler';\nconst handler = apiHandler();\nconst classHandler = new APIHandler(\"/annonce\");\n\n\nexport default class UserInfos extends Component {\n    state = {\n        isEditMode: false,\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n      };\n      async componentDidMount() {\n        console.log(this.props.match.params.id);\n        const apiRes = await classHandler.getById(this.props.match.params.id);\n        console.log(apiRes);\n        this.setState(apiRes.data);\n    }\n      handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n      updateUser = async (e) => {\n        e.preventDefault(); // classique : empêche l'event submit du formulaire de rafraîchir la page\n    \n        try { \n          const apiRes = await handler.patch(\n            \"/api/user/\" + this.props.context.currentUser._id,\n            { // ci-dessous : prend la valeur du state (si modifié) OU la valeur originale provenant de AuthContext\n              first_name: this.state.first_name || this.props.context.currentUser.first_name,\n              last_name: this.state.last_name || this.props.context.currentUser.last_name,\n              email: this.state.email || this.props.context.currentUser.email,\n            }\n          );\n          console.log(apiRes);\n          this.props.context.setCurrentUser(apiRes.data); // mise à jour AuthContext avec les nouvelles infos user\n          console.log(\"dsdsdsd\",apiRes.data);\n        } catch (apiErr) {\n          console.error(apiErr);\n        }\n      };\n\n    render() {\n        return (\n            <div>\n<form\n        onChange={this.handleChange}\n        onSubmit={this.updateUser}\n        className=\"form\"\n      >\n        <h3 className=\"title\">My infos</h3>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"first_name\"\n          defaultValue={this.props.context.currentUser.first_name}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"last_name\"\n          defaultValue={this.props.context.currentUser.last_name}\n        />\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"email\"\n          defaultValue={this.props.context.currentUser.email}\n        />\n        <button className=\"btn\">update infos</button>\n      </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}