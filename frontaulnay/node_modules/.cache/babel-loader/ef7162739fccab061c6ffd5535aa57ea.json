{"ast":null,"code":"var _jsxFileName = \"/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/auth/ProtectedRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"./AuthContext\";\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, ({\n  isSignedIn\n}) =>\n/*#__PURE__*/\n// destructuration de isSignedIn (une valeur du contexte ...)\nReact.createElement(Route, Object.assign({\n  render: props => {\n    return isSignedIn ?\n    /*#__PURE__*/\n    //   Si l'user est signedIn, retourne le component prévu pour ce path...\n    React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    })) :\n    /*#__PURE__*/\n    // sinon, redirige vers la page signin\n    React.createElement(Redirect, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    });\n  }\n}, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n})));","map":{"version":3,"sources":["/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/auth/ProtectedRoute.jsx"],"names":["React","Route","Redirect","AuthContext","ProtectedRoute","component","Component","rest","isSignedIn","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAC5B,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA;AAAF,CAAD;AAAA;AAAsB;AACrB,oBAAC,KAAD;AACE,EAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,WAAOD,UAAU;AAAA;AACf;AACA,wBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFe;AAAA;AAIf;AACA,wBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF;AAOD;AATH,GAUMF,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFJ,CADK","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"./AuthContext\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => (\n  <AuthContext.Consumer>\n    {({ isSignedIn }) => ( // destructuration de isSignedIn (une valeur du contexte ...)\n      <Route\n        render={(props) => {\n          return isSignedIn ? (\n            //   Si l'user est signedIn, retourne le component prévu pour ce path...\n            <Component {...props} />\n          ) : (\n            // sinon, redirige vers la page signin\n            <Redirect to=\"/signin\" />\n          );\n        }}\n        {...rest} // on spread les autres props passée à la route\n      />\n    )}\n  </AuthContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}