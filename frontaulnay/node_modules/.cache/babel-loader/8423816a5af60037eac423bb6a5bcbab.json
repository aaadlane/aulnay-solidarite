{"ast":null,"code":"var _jsxFileName = \"/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/page/Contact.jsx\";\nimport React, { Component } from \"react\";\nimport { apiHandler } from \"./../../api/handler\";\nconst handler = apiHandler();\nexport default class Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // définition de valeurs de base pour les tests de dev (\"mettre à chaîne vide une fois dev ok\")\n      full_name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\"\n    };\n\n    this.handleChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.handleSubmit = async e => {\n      e.preventDefault(); // classique : empêche l'event submit du formulaire de rafraîchir la page\n\n      const {\n        full_name,\n        email,\n        subject,\n        message\n      } = this.state; // destructuration de l'objet this.state\n\n      try {\n        await handler.post(\"/api/contact\", {\n          full_name,\n          email,\n          subject,\n          message\n        });\n      } catch (err) {\n        console.error(err.response.message);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onChange: this.handleChange,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"full_name\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Votre nom :\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"full_name\",\n      id: \"full_name\",\n      type: \"text\",\n      className: \"input\",\n      defaultValue: this.state.full_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Email :\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      className: \"input\",\n      defaultValue: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"subject\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Objet :\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"subject\",\n      id: \"subject\",\n      type: \"text\",\n      className: \"input\",\n      defaultValue: this.state.subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message\",\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Message :\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"message\",\n      id: \"message\",\n      className: \"input\",\n      defaultValue: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"ok\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/adlane/Documents/Cours/Cours-JS/js-adlane/aulnay-solidarite/aulnay-solidarite/frontaulnay/src/components/page/Contact.jsx"],"names":["React","Component","apiHandler","handler","Contact","state","full_name","email","subject","message","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","post","err","console","error","response","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { apiHandler } from \"./../../api/handler\";\nconst handler = apiHandler();\n\nexport default class Contact extends Component {\n  state = {\n    // définition de valeurs de base pour les tests de dev (\"mettre à chaîne vide une fois dev ok\")\n    full_name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  };\n\n  handleChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  handleSubmit = async (e) => {\n    e.preventDefault(); // classique : empêche l'event submit du formulaire de rafraîchir la page\n    const { full_name, email, subject, message } = this.state; // destructuration de l'objet this.state\n    try {\n      await handler.post(\"/api/contact\", {\n        full_name,\n        email,\n        subject,\n        message,\n      });\n    } catch (err) {\n      console.error(err.response.message);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"contact\">\n\n<h1 className=\"title\">Contact</h1>\n       <div className=\"form-contact\">\n       <form\n          className=\"form\"\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n        >\n          \n          <label htmlFor=\"full_name\" className=\"label\">\n            Votre nom :\n        </label>\n          <input\n            name=\"full_name\"\n            id=\"full_name\"\n            type=\"text\"\n            className=\"input\"\n            defaultValue={this.state.full_name}\n          />\n          <label htmlFor=\"email\" className=\"label\">\n            Email :\n        </label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            className=\"input\"\n            defaultValue={this.state.email}\n          />\n          <label htmlFor=\"subject\" className=\"label\">\n            Objet :\n        </label>\n          <input\n            name=\"subject\"\n            id=\"subject\"\n            type=\"text\"\n            className=\"input\"\n            defaultValue={this.state.subject}\n          />\n          <label htmlFor=\"message\" className=\"label\">\n            Message :\n        </label>\n          <textarea\n            name=\"message\"\n            id=\"message\"\n            className=\"input\"\n            defaultValue={this.state.message}\n          ></textarea>\n          <button className=\"btn\">ok</button>\n        </form>\n       </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}